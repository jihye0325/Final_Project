<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.clendy.member.model.dao.MemberMapper">
	<resultMap type="com.kh.clendy.member.model.vo.Member" id="loginMemberResultMap">
		<id property="user_no" column="USER_NO"/>
		<result property="id" column="ID"/>
		<result property="password" column="PASSWORD"/>
		<result property="user_name" column="USER_NAME"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="PHONE"/>
		<result property="address" column="ADDRESS"/>
		<result property="gender" column="GENDER"/>
		<result property="height" column="HEIGHT"/>
		<result property="weight" column="WEIGHT"/>
		<result property="sign_date" column="SIGN_DATE"/>
		<result property="modify_date" column="MODIFY_DATE"/>
		<result property="user_status" column="USER_STATUS"/>
		<result property="temp_pwd_yn" column="TEMP_PWD_YN"/>
		<collection property="memberRoleList" resultMap="memberRoleResultMap"/>
	</resultMap>
	
	<resultMap type="com.kh.clendy.member.model.vo.MemberRole" id="memberRoleResultMap">
		<id property="user_no" column="REF_USER_NO"/>
		<id property="auth_code" column="REF_AUTH_CODE"/>
		<association property="authority" resultMap="authorityResultMap"/>
	</resultMap>
	
	<resultMap type="com.kh.clendy.member.model.vo.Authority" id="authorityResultMap">
		<id property="auth_code" column="REF_AUTHORITY_CODE2"/>
		<result property="auth_name" column="AUTH_NAME"/>
		<result property="auth_desc" column="AUTH_DESC"/>	
	</resultMap>
	
	<select id="findMemberById" resultMap="loginMemberResultMap">
			SELECT
			        A.USER_NO
			      , A.ID
			      , A.PASSWORD
			      , A.USER_NAME
			      , A.EMAIL
			      , A.PHONE
			      , A.ADDRESS
			      , A.GENDER
			      , A.HEIGHT
			      , A.WEIGHT
			      , A.SIGN_DATE
			      , A.MODIFY_DATE
			      , A.USER_STATUS
			      , A.TEMP_PWD_YN
			      , B.USER_NO REF_USER_NO
			      , B.AUTH_CODE REF_AUTHORITY_CODE
			      , C.AUTH_CODE REF_AUTHORITY_CODE2
			      , C.AUTH_NAME 
			      , C.AUTH_DESC
			  FROM MEMBER A
			  LEFT JOIN MEMBER_ROLE B ON(A.USER_NO = B.USER_NO)
			  LEFT JOIN AUTHORITY C ON(B.AUTH_CODE = C.AUTH_CODE)
			WHERE A.ID = #{ userId }
			  AND A.USER_STATUS = 'Y'
	</select>
	
	<insert id="insertMember" parameterType="com.kh.clendy.member.model.vo.Member">
		INSERT 
	    	INTO MEMBER 
		(
		    USER_NO
		  , ID
		  , PASSWORD
		  , USER_NAME
		  , EMAIL
		  , PHONE
		  , ADDRESS
		  , GENDER
		  , HEIGHT
		  , WEIGHT
		  , SIGN_DATE
		  , MODIFY_DATE
		  , USER_STATUS
		  , TEMP_PWD_YN
		) 
		VALUES
		(
		    SEQ_USER_NO.NEXTVAL
		  , #{ id }
		  , #{ password }
		  , #{ user_name } 
		  , #{ email }
		  , #{ phone }
		  , #{ address }
		  , #{ gender }
		  , #{ height }
		  , #{ weight }
		  , SYSDATE
		  , SYSDATE
		  , DEFAULT
		  , DEFAULT
		 )	
	</insert>
	
	<insert id="insertMemberRole" parameterType="com.kh.clendy.member.model.vo.MemberRole">
		INSERT 
	    	INTO MEMBER_ROLE 
		(
	    	USER_NO
	  	  , AUTH_CODE
		) 
		VALUES
		(
			SEQ_USER_NO.CURRVAL
		  , #{ auth_code } 
		)
	</insert>
	
	<!-- 적립금 -->
	<insert id="addPoint" parameterType="_int">
		INSERT INTO POINT
		(
		    POINT_NO,
		    ORDER_CODE,
		    POINT_CODE,
		    POINT,
		    POINT_DATE,
		    USER_NO  
		)
		VALUES
		(
		    SEQ_POINT_NO.NEXTVAL,
		    NULL,
		    4,
		    (SELECT POINT_AMOUNT FROM POINT_CATEGORY WHERE POINT_CODE = 4),
		    DEFAULT,
		    SEQ_USER_NO.CURRVAL
		)
	</insert>
	
	<select id="findId" parameterType="String" resultType="String">
		SELECT 
		    ID
		  FROM MEMBER
		 WHERE USER_NAME = #{ user_name }
		   AND PHONE = #{ phone }
	</select>
	
	<select id="findMember" parameterType="String" resultType="String">
		SELECT 
		    ID
		    FROM MEMBER
		   WHERE ID = #{ rec_id }
	</select>
	
	<insert id="addRecPoint" parameterType="String">
		INSERT INTO POINT
			(
			    POINT_NO,
			    ORDER_CODE,
			    POINT_CODE,
			    POINT,
			    POINT_DATE,
			    USER_NO,
			    REC_USER
			)
			VALUES
			(
			    SEQ_POINT_NO.NEXTVAL,
			    NULL,
			    1,
			    (SELECT POINT_AMOUNT FROM POINT_CATEGORY WHERE POINT_CODE = 1),
			    DEFAULT,
			    (SELECT USER_NO FROM MEMBER WHERE ID = #{ rec_id }),
			    #{ id }
			)
	</insert>
	
	<!-- 아이디 중복 검사 -->
	<select id="idCheck" parameterType="String" resultType="_int">
		SELECT
				COUNT(*)
			FROM MEMBER
		   WHERE ID = #{ id }
	</select>
	
	<!-- 전화번호 중복검사 -->
	<select id="phoneCheck" parameterType="String" resultType="_int">
		SELECT
					COUNT(*)
				FROM MEMBER
			   WHERE PHONE = #{ phone }
	</select>
	
	<!-- 아이디, 이메일 일치하는 회원 존재 확인 -->
	<select id="findMemberById_Email" parameterType="String" resultMap="loginMemberResultMap">
		SELECT
		       ID,
               PASSWORD,
               USER_NAME,
               EMAIL,
               TEMP_PWD_YN
		    FROM MEMBER
		   WHERE ID = #{ id }
		     AND EMAIL = #{ email }
	</select>
	
	<!-- 임시비밀번호로 변경 -->
	<update id="updatePwd" parameterType="com.kh.clendy.member.model.vo.Member">
		UPDATE MEMBER
		   SET PASSWORD = #{ password },
		       TEMP_PWD_YN = 'Y'
		 WHERE ID = #{ id }
	</update>
</mapper>
